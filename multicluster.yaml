apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: confluent
spec:
  replicas: 5
  image:
    application: confluentinc/cp-zookeeper:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  metricReporter:
    enabled: true
  dependencies:
    zookeeper:
      endpoint: zookeeper.confluent.svc.cluster.local:2181
  configOverrides:
    server:
      - confluent.metrics.reporter.bootstrap.servers=kafka-dev.confluent.svc.cluster.local:9071


  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true

---
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka-dev
  namespace: confluent
spec:
  replicas: 4
  image:
    application: confluentinc/cp-server:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  metricReporter:
    enabled: true
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 2
  image:
    application: confluentinc/cp-server-connect:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dependencies:
    kafka:
      bootstrapEndpoint: kafka-dev.confluent.svc.cluster.local:9092
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
---
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect2
  namespace: confluent
spec:
  replicas: 2
  image:
    application: confluentinc/cp-server-connect:7.6.0
    init: confluentinc/confluent-init-container:2.8.0

  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9092
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
---
apiVersion: platform.confluent.io/v1beta1
# Confluent Replicator is built as a connector, and so will use the `Connect` CRD.
kind: Connect
metadata:
  name: replicator
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-enterprise-replicator:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dependencies:
    kafka:
      bootstrapEndpoint: kafka-dev.confluent.svc.cluster.local:9092
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: confluent
spec:
  replicas: 2
  image:
    application: confluentinc/cp-ksqldb-server:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dependencies:
    kafka:
      bootstrapEndpoint: kafka-dev.confluent.svc.cluster.local:9092
  dataVolumeCapacity: 10Gi
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
---
---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb-dev
  namespace: confluent
spec:
  replicas: 2
  image:
    application: confluentinc/cp-ksqldb-server:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9092
  dataVolumeCapacity: 10Gi
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  configOverrides:
    server:
      - confluent.controlcenter.kafka.kafka.bootstrap.servers=kafka.confluent.svc.cluster.local:9092

  image:
    application: confluentinc/cp-enterprise-control-center:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
    ksqldb:
      - name: ksql-dev
        url: http://ksqldb.confluent.svc.cluster.local:8088
      - name: ksql-dev1
        url: http://ksqldb-dev.confluent.svc.cluster.local:8088
    connect:
      - name: connect-dev
        url:  http://connect.confluent.svc.cluster.local:8083
      - name: connect-dev2
        url: http://connect2.confluent.svc.cluster.local:8083

    kafka:
      bootstrapEndpoint: kafka-dev:9071


---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 2
  image:
    application: confluentinc/cp-schema-registry:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dependencies:
    kafka:
      bootstrapEndpoint: kafka-dev.confluent.svc.cluster.local:9092
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: confluent
spec:
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
  image:
    application: confluentinc/cp-kafka-rest:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  replicas: 2
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true